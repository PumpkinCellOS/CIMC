errno_t spawn_wait(const char* exec, u16 argc, const char** argv);
i16 load_split_str(fd_t fd, char** bufs, u16 bufsz, u16 bufcount, char* delim);

int main(u16 argc, char* argv[])
{
    char _argv[3][8];
    i16 _argc = load_split_str(STDIN, (char**)_argv, 8, 3, " \n");
    return spawn_wait(_argv[0], _argc, _argv);
}

//// Expansion

const char* __DATA_01 = " \n";

int main(u16 argc, char* argv[])
{
    char _argv[3][8]; // 24B stack space
    i16 _argc; // ax
    {
        fd_t arg01 = STDIN; // STDIN = 0
        char** arg02 = _argv;
        u16 arg03 = 8;
        u16 arg04 = 3;
        char* arg05 = __DATA_01;
        _argc = load_split_str(arg01, arg02, arg03, arg04, arg05);
    }
    {
        __builtin_store_index_register(_argv, 0); // mov cx, [_argv+0]
        const char* arg01 = __builtin_push_index(); // push dx
        u16 arg02 = _argc; // push ax
        const char** arg03 = _argv;
        return spawn_wait(arg01, arg02, arg03);
    }
}

//// Assembly

.section data
    __DATA_01 := " \n"

.section text
@function main
main:
    _argv := [bp+0]
    cpop -24 ; char _argv[3][8];
    ; {
        push8 0x0 ; fd_t arg01 = STDIN;
        push16 _argv ; char** arg02 = _argv;
        push16 0x8 ; u16 arg03 = 8;
        push16 0x3 ; u16 arg04 = 3;
        push16 __DATA_01 ; char* arg05 = __DATA_01;
        calla load_split_str ; load_split_str(arg01, arg02, arg03, arg04, arg05);
        cpop 72
    ; }
    ; {
        mov cx, _argv ; __builtin_store_index_register(_argv, 0);
        push16 cx ; const char* arg01 = __builtin_push_index();
        push16 ax ; u16 arg02 = _argc;
        push16 _argv ; const char** arg03 = _argv;
        calla spawn_wait ; spawn_wait(arg01, arg02, arg03);
        cpop 48
        ret ; return
    ; }
